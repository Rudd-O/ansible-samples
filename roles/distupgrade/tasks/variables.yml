- name: record source distribution version upgrade and request relabeling if needed
  shell: |
      set -e
      created=
      if ! test -f /.distupgrade ; then
        created=true
        echo CHANGED >> /dev/stderr
        echo {{ ansible_distribution_version }} > /.distupgrade
        echo {{ ansible_distribution_version|int + 1 }} >> /.distupgrade
        {% if ansible_check_mode|default(False) %}selinuxenabled && touch /.autorelabel || true{% endif %}

      fi
      cat /.distupgrade

      {% if ansible_check_mode|default(False) %}test -n "$created" && rm -f /.distupgrade || true{% endif %}
  register: distrovercontent
  check_mode: no
  changed_when: '"CHANGED" in distrovercontent.stderr'

- name: record if there is a kernel package
  shell: rpm -qa | grep -q '^kernel-[0123456789]' && echo YES || echo NO
  check_mode: no
  register: kernelpkgcontent
  changed_when: False

- name: set variables up
  set_fact:
    distrover: '{{ distrovercontent.stdout_lines[0] }}'
    targetdistrover: '{{ distrovercontent.stdout_lines[1] }}'
    kernelpkgavailable: '{{ "YES" in kernelpkgcontent.stdout }}'
    base_packages: fedora-release dnf systemd

- name: decide whether to manage debug shell
  set_fact:
    debug_shell: '{% if distrover|int >= 23 %}yes{% else %}no{% endif %}'

- name: set method to dnf-upgrade
  set_fact:
    method: dnf-upgrade
  when: method is not defined and ansible_distribution in "Fedora" and distrover|int == 22

- name: set method to system-upgrade
  set_fact:
    method: system-upgrade
  when: method is not defined and ansible_distribution in "Fedora" and distrover|int >= 23 and kernelpkgavailable

- name: set method to distro-sync
  set_fact:
    method: distro-sync
  when: method is not defined and ansible_distribution in "Fedora" and distrover|int >= 23 and not kernelpkgavailable

- name: set method to qubes-dom0-update
  set_fact:
    method: qubes-dom0-update
  when: method is not defined and ansible_distribution in "Qubes"
