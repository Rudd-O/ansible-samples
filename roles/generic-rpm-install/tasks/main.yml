# Conforms to the latest Deployment policies.md in the documentation.

- fail: msg="Package is not defined"
  when: package is not defined

- block:
  - name: construct callee parameters
    set_fact:
      _generic_rpm_install:
        _packages: '{{ [package] }}'

  - debug: var=_generic_rpm_install

  - name: create repo file
    copy:
      content: |
        [{{ generic_rpm_install.dnf_repo_name }}]
        name={{ generic_rpm_install.dnf_repo_name }} for $releasever - $basearch
        baseurl={{ generic_rpm_install.dnf_repo_base_url }}/{% if ansible_distribution in "Qubes" %}q{% else %}fc{% endif %}$releasever/
        enabled=1
        gpgcheck={% if generic_rpm_install.gpgcheck %}1{% else %}0{% endif %}
        
        {% if generic_rpm_install.gpgcheck %}
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-{{ generic_rpm_install.dnf_repo_name }}
        {% endif %}
        
        metadata_expire=30

      dest: /etc/yum.repos.d/{{ generic_rpm_install.dnf_repo_name }}.repo
      mode: 0644
      owner: root
      group: root
    when: generic_rpm_install.configrepo
    register: repofile

  - name: copy RPM signing key
    copy:
      content: "{{ generic_rpm_install.gpgkey }}"
      dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ generic_rpm_install.dnf_repo_name }}
      owner: root
      group: root
      mode: 0644
    when: generic_rpm_install.configrepo and generic_rpm_install.gpgcheck

  - import_role:
      name: install-packages
    vars:
      state: latest
      packages: '{{ _generic_rpm_install["_packages"] }}'

  - set_fact:
      __generic_rpm_install: {}
    no_log: yes

  - set_fact:
      '{{ register_var|default("generic_rpm_install") }}': '{{ package_install }}'
  when: package is defined
  tags:
  - generic_rpm_install
