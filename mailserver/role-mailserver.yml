---
- hosts: mailserver
  sudo: True
  vars_files:
  # Read the instructions in the following file.
  - vars/mail.yml
  tasks:
  - name: install required software
    package: name={{ item }} state=present
    with_items:
    - postgrey
    - postfix
    - mailx
    - procmail
    - bogofilter
    - dovecot
    - dovecot-pigeonhole
    - incron
    - ca-certificates
    - pypolicyd-spf
    - opendkim
    tags:
    - dovecot
    - postfix
    - spf
    - dkim
  - name: remove sendmail
    package: name=sendmail state=absent
  - name: enable postgrey
    service: name=postgrey enabled=yes state=started
  - include: tasks/ssl.yml
  - name: install antispam mail delivery files
    template: src=files/mailserver{{ item }} dest={{ item }} mode=0755 owner=root group=root
    with_items:
    - /usr/local/bin/bogofilter-dovecot-deliver
    - /usr/local/bin/bogofilter-reclassify-mailboxes
    tags:
    - postfix
  - name: install postfix configuration files
    template: src=files/mailserver{{ item }} dest={{ item }} mode=0644 owner=root group=root
    with_items:
    - /etc/postfix/main.cf
    - /etc/postfix/master.cf
    - /etc/postfix/virtual
    register: postfix_config
    tags:
    - postfix
  - name: create policyd-spf group
    group:
      name: policyd-spf
      system: yes
    tags:
    - spf
  - name: create policyd-spf user
    user:
      name: policyd-spf
      createhome: yes
      comment: "SPF policyd user"
      system: yes
      home: /var/lib/policyd-spf
      group: policyd-spf
    tags:
    - spf
  - name: install policyd-spf configuration files
    template: src=files/mailserver{{ item }} dest={{ item }} mode=0644 owner=root group=root
    with_items:
    - /etc/python-policyd-spf/policyd-spf.conf
    register: spf_config
    tags:
    - spf
  - name: install opendkim configuration files
    template: src=files/mailserver{{ item }} dest={{ item }} mode=0644 owner=root group=root
    with_items:
    - /etc/opendkim.conf
    - /etc/opendkim/KeyTable
    - /etc/opendkim/SigningTable
    register: dkim_config
    tags:
    - dkim
  - name: create socket directory for opendkim
    file:
      state: directory
      owner: opendkim
      group: mail
      mode: 0750
      name: /var/spool/opendkim/socket
    tags:
    - dkim
  - name: create PKI directory for opendkim
    file:
      state: directory
      owner: root
      group: root
      mode: 0755
      name: /etc/pki/dkim
    tags:
    - dkim
  - name: create PKI subdirectories for opendkim
    file:
      state: directory
      owner: root
      group: root
      mode: 0755
      name: /etc/pki/dkim/{{ item }}
    with_items: '{{ dkim }}'
    tags:
    - dkim
  - name: deploy opendkim private keys
    copy: src=files/secrets/dkim/{{ item }}/default.private dest=/etc/pki/dkim/{{ item }}/default.private mode=0640 owner=root group=opendkim
    with_items: '{{ dkim }}'
    register: dkim_privkeys
    tags:
    - dkim
  - name: deploy opendkim public keys
    copy: src=files/secrets/dkim/{{ item }}/default.private dest=/etc/pki/dkim/{{ item }}/default.txt mode=0644 owner=root group=root
    with_items: '{{ dkim }}'
    register: dkim_pubkeys
    tags:
    - dkim
  - name: install dovecot configuration files
    template: src=files/mailserver{{ item }} dest={{ item }} mode=0644 owner=root group=root
    with_items:
    - /etc/dovecot/local.conf
    register: dovecot_config
    tags:
    - dovecot
  - name: create dovecot sieve after.d directories
    file: name={{ item }} state=directory owner=root group=root mode=0755
    with_items:
    - /var/lib/sieve
    - /var/lib/sieve/after.d
    tags:
    - dovecot
  - name: deploy dovecot after.d scripts
    copy:
      src: files/mailserver/var/lib/sieve/after.d/
      dest: /var/lib/sieve/after.d/
      owner: root
      group: root
      mode: 0644
    register: sieve_afterd
    tags:
    - dovecot
  - name: compile dovecot after.d scripts
    shell: |
      set -ex
      cd /var/lib/sieve/after.d
      for script in *.sieve ; do
        sievec "$script"
      done
    when: '{{ sieve_afterd.changed }}'
    tags:
    - dovecot
  - name: regenerate postfix hashmaps
    shell: postmap /etc/postfix/virtual
    when: postfix_config.changed
    tags:
    - postfix
  - name: enable catch-all for root mail
    lineinfile: state=present dest=/etc/aliases regexp="^root"':'" " line=root':'' '{{ unix_users[0]["name"] }}
    register: enable_catchall
  - name: regenerate aliases
    shell: newaliases
    when: enable_catchall.changed
  - name: create user
    user:
      name: "{{ item.name }}"
      createhome: yes
      comment: "{{ item.gecos }}"
      password: "{{ item.password | mandatory }}"
    with_items: unix_users
  - name: create legacy user inbox
    file: dest=/var/mail/{{ item.name }} owner={{ item.name }} mode=0660 state=file
    with_items: unix_users
  - name: create user maildir
    file: dest=/home/{{ item.name }}/mail owner={{ item.name }} group={{ item.name }} mode=0700 state=directory
    with_items: unix_users
  - name: create user inbox
    shell: su - {{ item.name }} -c 'cd mail ; test -f "inbox" || { touch "inbox" && chmod 600 "inbox" && echo CREATED ; }'
    changed_when: '"CREATED" in create_inbox.stdout'
    with_items: unix_users
    register: create_inbox
  - name: create user hambox
    shell: su - {{ item.name }} -c 'cd mail ; test -f "Mark as ham" || { touch "Mark as ham" && chmod 600 "Mark as ham" && echo CREATED ; }'
    changed_when: '"CREATED" in create_hambox.stdout'
    with_items: unix_users
    register: create_hambox
  - name: create user spambox
    shell: su - {{ item.name }} -c 'cd mail ; test -f "Mark as spam" || { touch "Mark as spam" && chmod 600 "Mark as spam" && echo CREATED ; }'
    changed_when: '"CREATED" in create_spambox.stdout'
    with_items: unix_users
    register: create_spambox
  - name: install antispam mail delivery files
    template: src=files/mailserver/etc/incron.d/spamclassifier dest=/etc/incron.d/spamclassifier mode=0600 owner=root group=root
    register: incrontabs
  - name: enable incron
    service: name=incrond enabled=yes state={% if create_spambox.changed or create_hambox.changed or incrontabs.changed %}re{% endif %}started
  - name: enable postfix
    service: name=postfix enabled=yes state={% if postfix_config.changed or (sslconf is defined and sslconf.changed) %}re{% endif %}started
    tags:
    - postfix
  - name: enable opendkim
    service: name=opendkim enabled=yes state={% if dkim_config.changed or dkim_pubkeys.changed or dkim_privkeys.changed %}re{% endif %}started
    tags:
    - dkim
  - name: enable dovecot
    service: name=dovecot enabled=yes state={% if dovecot_config.changed or (sslconf is defined and sslconf.changed) %}re{% endif %}started
    tags:
    - dovecot

- hosts: katrina
  tasks:
  - name: test the SMTP and IMAP servers work
    shell: openssl s_client -starttls {{ item }} -connect localhost:{{ item }} -verify 5 -verify_return_error
    changed_when: False
    tags:
    - test
    with_items:
    - imap
    - smtp
    always_run: yes

