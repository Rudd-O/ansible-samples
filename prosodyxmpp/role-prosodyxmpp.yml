---
- hosts: xmppserver
  become: True
  vars:
    xmpp:
    modules:
      source: https://hg.prosody.im/prosody-modules/
      revision: 81956bb99289
  vars_files:
  - vars/xmpp.yml
  tasks:
  - name: install prosody
    package: name=prosody state=present
    tags: ['prosody']

  - include: tasks/mercurial.yml

  - name: create prosody source modules directories
    file:
      name: '{{ item }}'
      state: directory
      mode: 0775
      owner: root
      group: nobody
    with_items:
    - /usr/src/prosody
    tags: ['prosody']

  - name: clone modules directory
    hg:
      repo: '{{ xmpp.modules.source }}'
      clone: yes
      dest: /usr/src/prosody/modules
      revision: '{{ xmpp.modules.revision }}'
    become: true
    become_user: nobody
    register: modulesclone
    tags: ['prosody']

  - name: create prosody config modules directory
    file:
      name: /etc/prosody/modules
      state: directory
      mode: 0755
      owner: root
      group: root
    tags: ['prosody']
  
  - name: symlink obtained modules
    shell: |
      set -e
      for mod in $( ( cd /usr/src/prosody/modules ; ls -1d mod_* ; cd /etc/prosody/modules ; ls -1d mod_* ) | sort | uniq ) ; do
        if test -d /usr/src/prosody/modules/"$mod" && test -d /etc/prosody/modules/"$mod" ; then continue ; fi
        if test -d /usr/src/prosody/modules/"$mod" ; then
          ln -s /usr/src/prosody/modules/"$mod" /etc/prosody/modules/"$mod"
          echo "CHANGED: linked $mod" >&2
        elif ! test -d /usr/src/prosody/modules/"$mod" ; then
          rm -f /etc/prosody/modules/"$mod"
          echo "CHANGED: unlinked $mod" >&2
        fi
      done
    register: linkmodules
    tags: ['prosody']
    changed_when: '{{ "CHANGED" in linkmodules.stderr }}'

  - include: tasks/ssl.yml
    tags:
    - ssl

  - name: configure prosody
    template:
      src: files/xmpp/etc/prosody/prosody.cfg.lua.j2
      dest: /etc/prosody/prosody.cfg.lua
      owner: root
      group: prosody
      mode: 0640
    register: prosodyconfig
    tags: ['prosody']

  - name: enable and start prosody
    service:
      name: prosody
      state: '{% if (modulesclone is defined and modulesclone.changed) or (linkmodules is defined and linkmodules.changed) or (prosodyconfig is defined and prosodyconfig.changed) or (sslconf is defined and sslconf.changed) %}re{% endif %}started'
      enabled: yes
    tags: ['prosody']

  # FIXME: security risk â€” password printed on the process list.
  - name: configure users
    script: files/xmpp/scripts/syncusers.py '{{ item.key }}' '{{ item.value }}'
    register: prosodyusers
    changed_when: '{{ "CHANGED" in prosodyusers.stdout }}'
    tags: ['prosody', 'users']
    with_dict: '{{ xmpp.jids }}'
